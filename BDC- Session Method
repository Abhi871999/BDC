************** Session Method *****************

report ZPRG1_MM01_30
       no standard page heading line-size 255.

PARAMETERS : p_file TYPE localfile.
TYPES : BEGIN OF lty_data,
       matnr TYPE MATNR,
       MBRSH TYPE MBRSH,
       MTART TYPE MTART,
       MAKTX TYPE MAKTX,
       meins TYPE meins,
    END OF lty_data.

 data : lt_data TYPE TABLE OF lty_data,
        ls_data TYPE lty_data.
 data : lv_file TYPE String.

 data : lt_bdcdata TYPE TABLE OF bdcdata,
        ls_bdcdata TYPE bdcdata.

 DATA: lt_MESSTAB TYPE TABLE OF BDCMSGCOLL,
       ls_messtab TYPE BDCMSGCOLL.
 data : lv_message TYPE string.


AT SELECTION-SCREEN on VALUE-REQUEST FOR p_file..
CALL FUNCTION 'F4_FILENAME'
 EXPORTING
   PROGRAM_NAME        = SYST-CPROG
   DYNPRO_NUMBER       = SYST-DYNNR
   FIELD_NAME          = ' '
 IMPORTING
   FILE_NAME           = p_file .


START-OF-SELECTION.
lv_file  = p_file.    " Explicit Type casting

  CALL FUNCTION 'GUI_UPLOAD'
    EXPORTING
      FILENAME                      = lv_file
*     FILETYPE                      = 'ASC'
     HAS_FIELD_SEPARATOR           = 'X'
*     HEADER_LENGTH                 = 0
*     READ_BY_LINE                  = 'X'
*     DAT_MODE                      = ' '
*     CODEPAGE                      = ' '
*     IGNORE_CERR                   = ABAP_TRUE
*     REPLACEMENT                   = '#'
*     CHECK_BOM                     = ' '
*     VIRUS_SCAN_PROFILE            =
*     NO_AUTH_CHECK                 = ' '
*   IMPORTING
*     FILELENGTH                    =
*     HEADER                        =
    TABLES
      DATA_TAB                      = lt_data
*   CHANGING
*     ISSCANPERFORMED               = ' '
   EXCEPTIONS
     FILE_OPEN_ERROR               = 1
     FILE_READ_ERROR               = 2
     NO_BATCH                      = 3
     GUI_REFUSE_FILETRANSFER       = 4
     INVALID_TYPE                  = 5
     NO_AUTHORITY                  = 6
     UNKNOWN_ERROR                 = 7
     BAD_DATA_FORMAT               = 8
     HEADER_NOT_ALLOWED            = 9
     SEPARATOR_NOT_ALLOWED         = 10
     HEADER_TOO_LONG               = 11
     UNKNOWN_DP_ERROR              = 12
     ACCESS_DENIED                 = 13
     DP_OUT_OF_MEMORY              = 14
     DISK_FULL                     = 15
     DP_TIMEOUT                    = 16
     OTHERS                        = 17
            .
  IF SY-SUBRC <> 0.
* Implement suitable error handling here
  ENDIF.



*include bdcrecx1.         " we get form bdc - dynpro & field

*start-of-selection.

CALL FUNCTION 'BDC_OPEN_GROUP'
 EXPORTING
   CLIENT                    = SY-MANDT
*   DEST                      = FILLER8
   GROUP                     = 'MM01_GRP'
*   HOLDDATE                  = FILLER8
   KEEP                      = 'X'
   USER                      = sy-uname
*   RECORD                    = FILLER1
*   PROG                      = SY-CPROG
*   DCPFM                     = '%'
*   DATFM                     = '%'
* IMPORTING
*   QID                       =
 EXCEPTIONS
   CLIENT_INVALID            = 1
   DESTINATION_INVALID       = 2
   GROUP_INVALID             = 3
   GROUP_IS_LOCKED           = 4
   HOLDDATE_INVALID          = 5
   INTERNAL_ERROR            = 6
   QUEUE_ERROR               = 7
   RUNNING                   = 8
   SYSTEM_LOCK_ERROR         = 9
   USER_INVALID              = 10
   OTHERS                    = 11.

IF SY-SUBRC <> 0.
* Implement suitable error handling here
ENDIF.





LOOP AT lt_data INTO ls_data.
*perform open_group.


perform bdc_dynpro      using 'SAPLMGMM' '0060'.
perform bdc_field       using 'BDC_CURSOR'
                              'RMMG1-MTART'.
perform bdc_field       using 'BDC_OKCODE'
                              '=ENTR'.
perform bdc_field       using 'RMMG1-MATNR'
                               ls_data-matnr.
perform bdc_field       using 'RMMG1-MBRSH'
                              ls_data-mbrsh.
perform bdc_field       using 'RMMG1-MTART'
                              ls_data-mtart.
perform bdc_dynpro      using 'SAPLMGMM' '0070'.
perform bdc_field       using 'BDC_CURSOR'
                              'MSICHTAUSW-DYTXT(01)'.
perform bdc_field       using 'BDC_OKCODE'
                              '=ENTR'.
perform bdc_field       using 'MSICHTAUSW-KZSEL(01)'
                              'X'.
perform bdc_dynpro      using 'SAPLMGMM' '4004'.
perform bdc_field       using 'BDC_OKCODE'
                              '=BU'.
perform bdc_field       using 'MAKT-MAKTX'
                              ls_data-maktx.
perform bdc_field       using 'BDC_CURSOR'
                              'MARA-MEINS'.
perform bdc_field       using 'MARA-MEINS'
                              ls_data-meins.
PERFORM bdc_field      USING 'MARA-MTPOS_MARA'
                              'NORM'.

CALL FUNCTION 'BDC_INSERT'
 EXPORTING
   TCODE                  = 'MM01'
*   POST_LOCAL             = NOVBLOCAL
*   PRINTING               = NOPRINT
*   SIMUBATCH              = ' '
*   CTUPARAMS              = ' '
  TABLES
    DYNPROTAB              = lt_bdcdata
 EXCEPTIONS
   INTERNAL_ERROR         = 1
   NOT_OPEN               = 2
   QUEUE_ERROR            = 3
   TCODE_INVALID          = 4
   PRINTING_INVALID       = 5
   POSTING_INVALID        = 6
   OTHERS                 = 7.

IF SY-SUBRC <> 0.
* Implement suitable error handling here
ENDIF.

REFRESH :lt_bdcdata.
*perform bdc_transaction using 'MM01'.

*perform close_group.

ENDLOOP.

CALL FUNCTION 'BDC_CLOSE_GROUP'
 EXCEPTIONS
   NOT_OPEN          = 1
   QUEUE_ERROR       = 2
   OTHERS            = 3
          .
IF SY-SUBRC <> 0.
* Implement suitable error handling here
ENDIF.

FORM BDC_DYNPRO USING PROGRAM DYNPRO.
  CLEAR ls_BDCDATA.
  ls_BDCDATA-PROGRAM  = PROGRAM.
  ls_BDCDATA-DYNPRO   = DYNPRO.
  ls_BDCDATA-DYNBEGIN = 'X'.
  APPEND ls_BDCDATA to lt_bdcdata.
ENDFORM.

*----------------------------------------------------------------------*
*        Insert field                                                  *
*----------------------------------------------------------------------*
FORM BDC_FIELD USING FNAM FVAL.

    CLEAR ls_BDCDATA.
    ls_BDCDATA-FNAM = FNAM.
    ls_BDCDATA-FVAL = FVAL.
    APPEND ls_BDCDATA to lt_bdcdata.

ENDFORM.
